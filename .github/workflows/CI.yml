name: Pylint

on: 

  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, reopened]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: |
          python -m pip install pylint
    - name: Analysing the code with pylint
      run: |
        pylint ./FLASK_STARTERKIT

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '14'

    - name: Install dependencies
      run: npm install

    - name: Code Quality Check with SonarQube
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      run: |
        sonar-scanner \
          -Dsonar.projectKey=<your-project-key> \
          -Dsonar.sources=. \
          -Dsonar.host.url=https://sonarcloud.io \
          -Dsonar.login=$SONAR_TOKEN

  merge:
    runs-on: ubuntu-latest
    needs: build
    if: success()

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure Git
      run: |
        git config --global user.name 'github-actions'
        git config --global user.email 'github-actions@github.com'

    - name: Merge into dev
      run: |
        git fetch origin
        git checkout dev
        git merge --no-ff ${{ github.ref }}
        git push origin dev
